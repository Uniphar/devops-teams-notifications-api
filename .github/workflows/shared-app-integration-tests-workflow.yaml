name: Shared Application Integration Tests Workflow

on:
  workflow_call:
    secrets:
      AZURE_TENANT_ID:
        required: true
        description: "Azure Tenant ID"
      AZURE_CLIENT_ID:
        required: true
        description: "Azure Client ID"
      AZURE_SUBSCRIPTION_ID:
        required: true
        description: "Azure Subscription ID"
      ACTIONS_AUTH_APP_ID:
        required: true
        description: "GitHub App ID"
      ACTIONS_AUTH_APP_PRIVATE_KEY:
        required: true
        description: "GitHub App Private Key"
    inputs:
      applicationFolder:
        type: string
        required: true
        description: "Application Folder"
      environment:
        type: string
        required: true
        description: "Environment"
      testCategory:
        type: string
        required: false
        default: "Integration"
        description: "Test Category"

jobs:
  run_integration_tests:
    name: Run Integration Tests
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: gh-app-install token
        id: gh-app
        uses: getsentry/action-github-app-token@v3
        with:
          app_id: ${{ secrets.ACTIONS_AUTH_APP_ID }}
          private_key: ${{ secrets.ACTIONS_AUTH_APP_PRIVATE_KEY }}

      - name: checkout devops-azure repo
        uses: actions/checkout@v4
        with:
          path: devops-azure
          repository: Uniphar/devops-azure
          token: ${{ steps.gh-app.outputs.token }}

      - name: azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # see https://github.com/Azure/azure-cli/issues/28708#issuecomment-2047256166
      # we need this to do actions on the graph and blob clients in the integration tests
      - name: Get a login code for longer then 5min
        shell: bash
        run: |
          echo "Current"
          date +"%Y-%m-%dT%H:%M:%S%z"
          echo "https://management.core.windows.net/:"
          az account get-access-token --output json --resource https://management.core.windows.net/ --query "{ tenant: tenant, subscription: subscription, expiry: expiresOn }"
          echo "Azure RM:"
          az account get-access-token --resource-type arm --query "{ tenant: tenant, subscription: subscription, expiry: expiresOn }" -o json
          echo "MS Graph:"
          az account get-access-token --resource-type ms-graph --query "{ tenant: tenant, subscription: subscription, expiry: expiresOn }" -o json
          echo "https://storage.azure.com/.default:"
          az account get-access-token --scope https://storage.azure.com/.default --query "{ tenant: tenant, subscription: subscription, expiry: expiresOn }" -o json

      - name: compute environment variables
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          errorActionPreference: "stop"
          failOnStandardError: true
          inlineScript: |
            try{
              Import-Module .\devops-azure\src\Uniphar.DevOps.psd1 -ErrorAction Stop -Force

              $AzureEntraExternalTenantId = Resolve-UniEntraExternalTenantId -Environment '${{ inputs.environment }}'
              $dnsRecordName = Resolve-UniDnsRecordName $p_webApiProject -Environment '${{ inputs.environment }}'
              $ApiHost = "$($dnsRecordName).$($g_mainPublicDns)"

              echo "AZURE_ENTRA_EXTERNAL_TENANT_ID=$AzureEntraExternalTenantId" >> $env:GITHUB_ENV
              echo "API_HOST=$ApiHost" >> $env:GITHUB_ENV
            }
            catch {
              Write-Error $_
              exit 1
            }

      - name: run integration tests
        working-directory: ./src/${{ inputs.applicationFolder }}.Tests
        run: dotnet test -v:q --nologo -s ./runsettings/${{ inputs.environment }}.runsettings --filter TestCategory=${{ inputs.testCategory }} --logger GitHubActions
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.4.5
        with:
          reports: "./tests/*/coverage.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: "coverage-results" # REQUIRED # The directory where the generated report should be saved.
          reporttypes: "HtmlInline;MarkdownSummaryGithub"
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: coverage-results
      - name: Publish coverage in build summary # Only applicable if 'MarkdownSummaryGithub' or one of the other Markdown report types is generated
        run: cat coverage-results/SummaryGithub.md >> $GITHUB_STEP_SUMMARY # Adjust path and filename if necessary
        shell: bash
