// AUTOGENERATED, but if this is the csgen file, can be checked, by changing to .cs and moving it into Teams.Notifications.Api=> ControllerTemplate
// And changing:
// CardTemplateController <=>{{controllerName}}
// CardTemplateModel <=>  {{modelName}}
// CardTemplate.json <=> {{filename}}
// ReSharper disable once CheckNamespace
namespace Teams.Notifications.Api.Controllers;

[Microsoft.AspNetCore.Mvc.Route("[controller]")]
[ApiController]
public class {{controllerName}} : ControllerBase
{
    private const string _teamName = "Notifications Platform";
    private const string _channelName = "File Errors";
    private const string jsonFileName = "{{filename}}";
    private readonly ICardManagerService _cardManagerService;
    public {{controllerName}}(ICardManagerService cardManagerService)
    {
        _cardManagerService = cardManagerService;
    }

    /// <summary>
    ///     Creates or updates the file error in teams
    /// </summary>
    /// <param name="model">Information that needs to be sent to teams</param>
    [HttpPost]
    // with swagger response you can give it a description
    [ProducesResponseType(StatusCodes.Status500InternalServerError)]
    [SwaggerResponse(StatusCodes.Status200OK, "Creates a new file error or updates it")]
    [SwaggerResponse(StatusCodes.Status400BadRequest, "You are doing something wrong!")]
    public async Task<IActionResult> Post({{modelName}} model)
    {
        await _cardManagerService.CreateOrUpdate(jsonFileName, model, _teamName, _channelName);
        return Ok();
    }

    /// <summary>
    ///     Deletes the card based on the id
    /// </summary>
    /// <param name="uniqueId">The id used to know what card to delete, required</param>
    [HttpDelete]
    [Produces("application/json")]
    // with swagger response you can give it a description
    [ProducesResponseType(StatusCodes.Status500InternalServerError)]
    [SwaggerResponse(StatusCodes.Status200OK, "Creates a new file error or updates it")]
    [SwaggerResponse(StatusCodes.Status400BadRequest, "You are doing something wrong!")]
    public async Task<IActionResult> Delete(string uniqueId)
    {
       await _cardManagerService.DeleteCard(jsonFileName, uniqueId, _teamName, _channelName);

       return Ok();
    }
}